use role sysadmin ; 

show warehouses;

create or replace table t_warehouse_list as 
select *
from table(result_scan(last_query_id()));

with usage as (
select  u.warehouse_id
    ,       u.warehouse_name
    ,       sum(total_elapsed_time)/1000/3600 elapsed_query_hours
    ,       count(u.warehouse_id) query_counts 
    ,       case 
                when wh."size"='X-Small'  then 1 
                when wh."size"= 'Small'   then 2 
                when wh."size"='Medium'   then 4 
                when wh."size"='Large'    then 8 
                when wh."size"='X-Large'  then 16 
                when wh."size"='2X-Large' then 32
                when wh."size"='3X-Large' then 64 
                when wh."size"='4X-Large' then 128 
            end as vwh_node_count
    ,       wh."size" as wh_size
    ,       wh."auto_suspend" as auto_suspend
    ,       (   select sum(credits_used)
                from snowflake.account_usage.warehouse_metering_history wmh 
                where wmh.warehouse_id = u.warehouse_id
                and   wmh.start_time > dateadd(day, -7, current_date())
            ) as credits_used  
    from snowflake.account_usage.query_history u
    join t_warehouse_list wh 
        on wh."name" = u.warehouse_name
    where u.start_time > dateadd(day, -7, current_date()) 
    group by u.warehouse_id
    ,        u.warehouse_name
    ,       case 
            when wh."size"='X-Small'  then 1 
            when wh."size"= 'Small'   then 2 
            when wh."size"='Medium'   then 4 
            when wh."size"='Large'    then 8 
            when wh."size"='X-Large'  then 16 
            when wh."size"='2X-Large' then 32
            when wh."size"='3X-Large' then 64 
            when wh."size"='4X-Large' then 128 
        end
    ,   wh."size"
    ,   wh."auto_suspend" 
) 
select  usage.warehouse_name
,       round(usage.elapsed_query_hours,2) as elapsed_query_hours
,       usage.query_counts
,       usage.credits_used
,       usage.wh_size
,       usage.vwh_node_count
,       round(usage.credits_used / nullifzero(usage.vwh_node_count),2) as elapsed_billed_hours
,       round(usage.elapsed_query_hours / nullifzero (elapsed_billed_hours) * 100,1) as utilisation_pct
,       usage.auto_suspend
from    usage
order by 4 desc nulls last
;



with credits as (
    select wmh.warehouse_name 
    ,      sum(credits_used) as credits_used
    from snowflake.account_usage.warehouse_metering_history wmh 
    where wmh.start_time > dateadd(month, -1, current_date())
    group by wmh.warehouse_name
), queries as ( 
	SELECT -- Queries over 1Gb in size
		qu.warehouse_name ,
		warehouse_size ,
		AVG(CASE WHEN bytes_scanned   >= 1000000000  THEN bytes_scanned ELSE NULL END) AS avg_large ,
		COUNT(CASE WHEN bytes_scanned >= 1000000000  THEN 1 ELSE NULL END) AS count_large ,
		COUNT(CASE WHEN bytes_scanned <  1000000000  THEN 1 ELSE NULL END) AS count_small ,
		AVG(CASE WHEN bytes_scanned   >= 1000000000  THEN total_elapsed_time / 1000 ELSE NULL END) AS avg_large_exe_time ,
		AVG(bytes_scanned) AS avg_bytes_scanned ,
		AVG(total_elapsed_time)/ 1000 AS avg_elapsed_time ,
		AVG(execution_time)/ 1000 AS avg_execution_time ,
		COUNT(*) AS count_queries
	FROM
		snowflake.account_usage.query_history qu
	WHERE
		execution_status = 'SUCCESS'
		AND warehouse_size IS NOT NULL
		AND end_time > dateadd(MONTH,-1,CURRENT_DATE())
		and bytes_scanned > 0
    GROUP BY
        qu.warehouse_name,
        warehouse_size
)
SELECT
	q.warehouse_name , -- Warehouse Name
	q.warehouse_size ,
	ROUND(count_large / count_queries * 100, 0) AS percent_large ,
	ROUND(count_small / count_queries * 100, 0) AS percent_small ,
	CASE
		WHEN avg_large >= POWER(2, 40) THEN to_char(ROUND(avg_large / POWER(2, 40), 1)) || ' TB'
		WHEN avg_large >= POWER(2, 30) THEN to_char(ROUND(avg_large / POWER(2, 30), 1)) || ' GB'
		WHEN avg_large >= POWER(2, 20) THEN to_char(ROUND(avg_large / POWER(2, 20), 1)) || ' MB'
		WHEN avg_large >= POWER(2, 10) THEN to_char(ROUND(avg_large / POWER(2, 10), 1)) || ' K'
		ELSE to_char(avg_large)
	END AS avg_bytes_large ,
	ROUND(avg_large_exe_time) AS avg_large_exe_time ,
	ROUND(avg_execution_time) AS avg_all_exe_time ,
	count_queries,
    ROUND(c.credits_used) as credits_used
FROM queries q,
     credits c
WHERE q.warehouse_name = c.warehouse_name
ORDER BY
    c.credits_used desc,
    case warehouse_size
       when 'X-Small' then 1
       when 'Small'   then 2
       when 'Medium'  then 3
       when 'Large'   then 4
       when 'X-Large' then 5
       when '2X-Large' then 6
       when '3X-Large' then 7
       when '4X-Large' then 8
       else 9
       end desc;


